% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_parallel_lme.R
\name{parallel_lme}
\alias{parallel_lme}
\title{Run mixed-effects linear regression optimization in parallel}
\usage{
parallel_lme(
  parallel_start,
  return_best_solution,
  sim_data,
  target_cor,
  target_reg,
  reg_equation,
  target_se = NULL,
  weight = NA,
  max_iter = 10000,
  init_temp = 1,
  cooling_rate = NULL,
  tol = 1e-06,
  max_starts = 1,
  hill_climbs = NULL,
  move_prob = list(start = c(residual = 0, k_cycle = 0, local = 0.25, tau = 0.75), end =
    c(residual = 0.2, k_cycle = 0.1, local = 0.7, tau = 0)),
  min_decimals = 1
)
}
\arguments{
\item{parallel_start}{Integer; number of parallel runs to launch.}

\item{return_best_solution}{Logical; if TRUE, return only the best fit (default FALSE).}

\item{sim_data}{Data frame or list; input data for mixed-effects modeling.}

\item{target_cor}{Numeric; target correlation(s) to achieve.}

\item{target_reg}{Numeric; target regression coefficient(s).}

\item{reg_equation}{Formula or character; regression model specification.}

\item{target_se}{Numeric, optional; target standard error(s) for coefficients.}

\item{weight}{Numeric or NA; observation weights.}

\item{max_iter}{Integer; maximum number of iterations per start (default 1e5).}

\item{init_temp}{Numeric; initial temperature for simulated annealing.}

\item{cooling_rate}{Numeric; decay rate of temperature.}

\item{tol}{Numeric; convergence tolerance (default 1e-6).}

\item{max_starts}{Integer; number of optimization restarts (default 1).}

\item{hill_climbs}{Integer or NA; number of hill-climb refinements post-annealing.}

\item{move_prob}{List containing start and end probabilities of move selection}

\item{min_decimals}{Integer; then minimum number of decimals (trailing zeros) of the targets}
}
\value{
A list of `discourse.object` results from each parallel start,
        or a single `discourse.object` if `return_best_solution = TRUE`.
}
\description{
Executes multiple starts of `optim_lme` across available cores and returns either all results or the best solution.
}
