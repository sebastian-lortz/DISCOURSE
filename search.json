[{"path":[]},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement s..j.lortz@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 GPL (>= 2) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sebastian . J. Lortz. Author, maintainer.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lortz SAJ (2025). discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates. R package version 0.0.1.000, https://github.com/sebastian-lortz/discourse.","code":"@Manual{,   title = {discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates},   author = {Sebastian A. J. Lortz},   year = {2025},   note = {R package version 0.0.1.000},   url = {https://github.com/sebastian-lortz/discourse}, }"},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"discourse","dir":"","previous_headings":"","what":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"introduce DISCOURSE framework – Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates. primary scope algorithmic framework reconstruct complete datasets using summary statistics, giving researchers way - raw data unavailable - inform replication study decision‑making.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"method available R package comprehensive ShinyApp.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"web-app","dir":"","previous_headings":"Usage","what":"Web App","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"can use app https://sebastian-lortz.shinyapps.io/discourse/. Expect longer computation time compared running app locally.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"installation","dir":"","previous_headings":"Usage","what":"Installation","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"can install latest version R package discourse like :","code":"# install devtools if you don’t have it yet if (!requireNamespace(\"devtools\")) {install.packages(\"devtools\")}  # install from GitHub devtools::install_github(\"sebastian-lortz/discourse\")"},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"run","dir":"","previous_headings":"Usage","what":"Run","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"can launch ShinyApp locally running:","code":"discourse::run_app()"},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"Please cite discourse use . cite software, use: Lortz SAJ (2025). discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates. R package version 0.0.1.000, https://sebastian-lortz.github.io/discourse/, https://github.com/sebastian-lortz/discourse. copy reference information BibTeX file:","code":"@Manual{discourse,   title        = {discourse: Data‐simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates},   author       = {Sebastian A. J. Lortz},   year         = {2025},   note         = {R package version 0.0.1.000},   url          = {https://github.com/sebastian-lortz/discourse} }"},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"open feedback new ideas. Please mind Contributor Code Conduct.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates","text":"reading doc version : 0.0.1.000 README compiled ","code":"Sys.time() #> [1] \"2025-06-26 16:38:57 CEST\""},{"path":"https://sebastian-lortz.github.io/discourse/reference/check_grim.html","id":null,"dir":"Reference","previous_headings":"","what":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","title":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","text":"Performs GRIM (Granularity-Related Inconsistency Means) test assess whether reported mean numerically possible given sample size.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/check_grim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","text":"","code":"check_grim(n, target_mean, decimals, tol.r = .Machine$double.eps^0.5)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/check_grim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","text":"n Integer. Sample size; positive whole number. target_mean Numeric. Reported mean tested plausibility. decimals Integer. Number decimal places reported mean. tol.r Numeric. Tolerance rounding errors; non-negative value. Default square root machine double precision epsilon.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/check_grim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","text":"list components: test Logical. TRUE reported mean plausible. grim_mean Numeric. adjusted mean numerically plausible (rounded `decimals`).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/check_grim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check plausibility of a reported mean with the GRIM test (Brown & Heathers 2007) — check_grim","text":"","code":"if (FALSE) { # \\dontrun{ check_grim(10, 3.7, 1) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/discourse-package.html","id":null,"dir":"Reference","previous_headings":"","what":"discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates — discourse-package","title":"discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates — discourse-package","text":"introduce DISCOURSE – algorithmic framework designed reconstruct complete data sets solely summary statistics. provides researchers tool follow-analyses even raw data unavailable.","code":""},{"path":[]},{"path":"https://sebastian-lortz.github.io/discourse/reference/discourse-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"discourse: Data-simulation via Iterative Stochastic Combinatorial Optimization Using Reported Summary Estimates — discourse-package","text":"Maintainer: Sebastian . J. Lortz s..j.lortz@gmail.com (ORCID)","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RMSE for a single discourse.object result — get_rmse","title":"Compute RMSE for a single discourse.object result — get_rmse","text":"Calculates root-mean-square error (RMSE) metrics single `discourse.object` output, comparing model estimates simulated data original target inputs.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RMSE for a single discourse.object result — get_rmse","text":"","code":"get_rmse(result)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RMSE for a single discourse.object result — get_rmse","text":"result `discourse.object` produced analysis functions (e.g., `optim_vec`, `optim_aov()`, `optim_lm()`, `optim()`).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RMSE for a single discourse.object result — get_rmse","text":"named `list` RMSE values. Possible elements: rmse_cor Numeric. RMSE correlation estimates LM- LME-based objects. rmse_reg Numeric. RMSE regression coefficient estimates LM- LME-based objects. rmse_se Numeric. RMSE standard error estimates LM- LME-based objects. rmse_F Numeric. RMSE F-values ANOVA-based objects. rmse_mean Numeric. RMSE means vector-based objects. rmse_sd Numeric. RMSE standard deviations vector-based objects.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute RMSE for a single discourse.object result — get_rmse","text":"","code":"if (FALSE) { # \\dontrun{ # Regression-based result result <- optim_lm(args = ..., ...) get_rmse(result) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","title":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","text":"Calculates root-mean-square error (RMSE) metrics -run variability deviations specified target values across one `discourse.object` results.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","text":"","code":"get_rmse_parallel(object_list)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","text":"object_list `discourse.object` list thereof. Objects produced analysis functions `parallel_aov()`, `parallel_lm()`, `parallel_lme()`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","text":"list components: between_rmse `data.frame` summarizing RMSE metrics (Mean_RMSE, SD_RMSE, Min_RMSE, Max_RMSE) -run differences (taking account targets). target_rmse `data.frame` summarizing RMSE metrics deviations original target inputs (taking account mean across runs). data_rmse `list` raw RMSE values: Named numeric vector -run RMSEs (`rmse_cor`, `rmse_reg`, etc.). target Named numeric vector target-run RMSEs.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_rmse_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute RMSE metrics across discourse.object runs — get_rmse_parallel","text":"","code":"if (FALSE) { # \\dontrun{ # Multiple-run RMSE comparison result <- parallel_lm(args = ..., ...) get_rmse_parallel(result) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract statistics from a single discourse.object — get_stats","title":"Extract statistics from a single discourse.object — get_stats","text":"Computes returns key analytical outputs one `discourse.object`, including model fits, parameter estimates, summary statistics appropriate regression, ANOVA, vector-based analyses.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract statistics from a single discourse.object — get_stats","text":"","code":"get_stats(result)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract statistics from a single discourse.object — get_stats","text":"result `discourse.object` produced analysis functions (e.g., `optim_vec`, `optim_aov()`, `optim_lm()`, `optim()`).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract statistics from a single discourse.object — get_stats","text":"named `list` containing elements dependent input type: model Model object ANOVA table used estimating parameters. reg Numeric vector regression coefficients (fixed effects) random intercept (last element, LME ) regression-based objects. se Numeric vector standard errors corresponding `reg` (excluding random intercept LME). cor Numeric vector bivariate correlations regression-based objects. mean Numeric vector means: regression-based, variable means (columns wide format); vector-based, variable means; ANOVA, (sub)group means. sd Numeric vector standard deviations regression- vector-based objects. F_value Numeric vector F-statistics ANOVA-based objects.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract statistics from a single discourse.object — get_stats","text":"","code":"if (FALSE) { # \\dontrun{ get_stats(discourse.object) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate statistics across discourse.object runs — get_stats_parallel","title":"Aggregate statistics across discourse.object runs — get_stats_parallel","text":"Computes summary metrics (mean, median, standard deviation, minimum, maximum) numeric output component across multiple `discourse.object` results.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate statistics across discourse.object runs — get_stats_parallel","text":"","code":"get_stats_parallel(object_list)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate statistics across discourse.object runs — get_stats_parallel","text":"object_list `list` `discourse.object` instances. Outputs functions (e.g., `optim_vec`, `optim_aov()`, `optim_lm()`, `optim()`).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate statistics across discourse.object runs — get_stats_parallel","text":"`list` `data.frame` objects. data.frame corresponds one numeric component (e.g., `reg`, `se`, `cor`, `mean`, `sd`), contains columns: mean Numeric. Mean component across runs. med Numeric. Median component across runs. sd Numeric. Standard deviation across runs. min Numeric. Minimum value observed across runs. max Numeric. Maximum value observed across runs.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/get_stats_parallel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate statistics across discourse.object runs — get_stats_parallel","text":"","code":"if (FALSE) { # \\dontrun{ # Single-threaded example result <- parallel_lm(args = ..., ...) get_stats_parallel(result) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/hill_climb.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform hill-climbing optimization — hill_climb","title":"Perform hill-climbing optimization — hill_climb","text":"Executes hill-climbing algorithm iteratively improve candidate data set minimizing supplied error function. Supports LM LME modules.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/hill_climb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform hill-climbing optimization — hill_climb","text":"","code":"hill_climb(   current_candidate,   error_function,   N,   hill_climbs = 100,   LME = FALSE,   num_preds = NULL,   progress_bar = TRUE,   neighborhood_size = 4,   w.length = NULL,   outcome = NULL,   progressor = NULL,   pb_interval = NULL )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/hill_climb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform hill-climbing optimization — hill_climb","text":"current_candidate data frame representing initial candidate solution optimized. error_function objective function takes candidate returns list containing element `$total_error`. N Integer. Sample size; number subjects `current_candidate`. hill_climbs Integer. Maximum number iterations hill climbing. Default 1e2. LME Logical. TRUE, perform moves appropriate mixed-effects data (long--wide swaps). Default FALSE. num_preds Integer. Number predictors (columns) `LME = FALSE`. Required mixed-effects. progress_bar Logical. Whether display text progress bar. Default TRUE. neighborhood_size Integer. Number candidate moves evaluated per iteration. Default 4. w.length Integer. Number columns wide-format data `LME = TRUE`. Required mixed-effects. outcome Optional vector. Outcome variable standard model moves (unused error_function handles ). progressor Optional function. Callback external progress updates (internal use). pb_interval Optional numeric. Interval (iterations) progressor calls.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/hill_climb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform hill-climbing optimization — hill_climb","text":"list components: best_candidate optimized candidate structure achieving lowest error. best_error Numeric. minimum value objective function found optimization.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/hill_climb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform hill-climbing optimization — hill_climb","text":"","code":"if (FALSE) { # \\dontrun{ hill_climb(  current_candidate = data.frame(),  outcome = NULL,  N = 100,  error_function = function(candidate) {},  hill_climbs = 100,  LME = TRUE,  num_preds = NULL,  progress_bar = TRUE,  progressor = NULL,  pb_interval= NULL)  } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_aov.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize simulated data to match ANOVA F-values — optim_aov","title":"Optimize simulated data to match ANOVA F-values — optim_aov","text":"Uses DISCOURSE algorithmic framework simulate data produce target ANOVA F-statistics specified factorial design given input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_aov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize simulated data to match ANOVA F-values — optim_aov","text":"","code":"optim_aov(   N,   levels,   target_group_means,   target_f_list,   integer,   range,   formula,   factor_type,   subgroup_sizes = NULL,   df_effects = NULL,   tolerance = 1e-08,   typeSS = 3,   max_iter = 1000,   init_temp = 1,   cooling_rate = NULL,   max_step = 0.2,   max_starts = 1,   checkGrim = FALSE,   min_decimals = 1,   progress_bar = TRUE,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_aov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize simulated data to match ANOVA F-values — optim_aov","text":"N Integer. Total number subjects (sum `subgroup_sizes`). levels Integer vector. Number factor levels per factor design. target_group_means Numeric vector. Desired means group design. target_f_list List components: F Numeric vector target F-statistics. effect Character vector effect names matching `F`. contrast Optional character formula contrasts. contrast_method Optional character specifying contrast method. integer Logical. TRUE, candidate values treated integers, FALSE treated continous values. range Numeric vector length 2. Lower upper bounds candidate means. formula Formula character. Model formula used compute F-values (e.g., `y ~ + B + *B`). factor_type Character vector. Type factor (`\"\"` `\"within\"`) matching length `levels`. subgroup_sizes Numeric vector. Optional sizes -subjects group unbalanced designs; length must equal product `levels` factors. df_effects Numeric vector. Degrees freedom model effects. Default `NULL`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. typeSS Integer. Type sums--squares ANOVA (2 3). Default 3. max_iter Integer. Maximum iterations per restart. Default 1e3. init_temp Numeric. Initial temperature annealing. Default 1. cooling_rate Numeric. Cooling rate per iteration (0 1); NULL, calculated automatically `(init_temp-10)/init_temp`. max_step Numeric. Maximum move size proportion `range`. Default 0.2. max_starts Integer. Number annealing restarts. Default 1. checkGrim Logical. TRUE `integer = TRUE`, perform GRIM checks `target_group_means`. Default FALSE. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_bar Logical. Show text progress bar optimization. Default TRUE. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_aov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize simulated data to match ANOVA F-values — optim_aov","text":"`discourse.object` list containing: best_error Numeric. Minimum error (RMSE) achieved. data Data frame optimized outcome values (grouping variables). inputs List input arguments. track_error Numeric vector best error iteration. grim List GRIM results.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_aov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize simulated data to match ANOVA F-values — optim_aov","text":"","code":"if (FALSE) { # \\dontrun{ # Balanced 2x2 design optim_aov(   N = 40,   levels = c(2, 2),   target_group_means = c(1, 2, 3, 4),   target_f_list = list(effect = c(\"A\", \"B\"),                        F = c(5.6, 8.3), ),   formula = y ~ A + B + A*B,   factor_type = c(\"between\", \"between\"),   range = c(0, 5),   integer = FALSE,   max_iter = 1000,   max_starts = 3 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","title":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","text":"Uses DISCOURSE algorithmic framework simulate data resulting correlations regression coefficients match specified targets given regression model input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","text":"","code":"optim_lm(   sim_data,   target_cor,   target_reg,   reg_equation,   target_se = NULL,   weight = c(1, 1),   max_iter = 1e+05,   init_temp = 1,   cooling_rate = NULL,   tolerance = 1e-06,   prob_global_move = 0.1,   progress_bar = TRUE,   max_starts = 1,   hill_climbs = NULL,   min_decimals = 1,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","text":"sim_data Data frame. Predictor variables outcome optimized; least two columns. target_cor Numeric vector. Target upper-triangular (excluding diagonal) correlation values predictor outcome variables. target_reg Numeric vector. Target regression coefficients including intercept, matching terms `reg_equation`. reg_equation Character formula. Regression model (e.g., \"Y ~ X1 + X2 + X1:X2\"). target_se Numeric vector, optional. Target standard errors regression coefficients (length `target_reg`). weight Numeric vector length 2. Weights correlation vs. regression error objective function. Default `c(1, 1)`. max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. prob_global_move Numeric (0–1). Probability global shuffle move vs. local swap. Default `0.1`. progress_bar Logical. Show text progress bar optimization. Default `TRUE`. max_starts Integer. Number annealing restarts. Default `1`. hill_climbs Integer NULL. Number hill‐climbing iterations optional local refinement; NULL, skips refinement. Default `NULL`. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","text":"`discourse.object` list containing: best_error Numeric. Minimum objective error achieved. data Data frame optimized predictor outcome values. inputs List input parameters reproducibility. track_error Numeric vector best error iteration annealing. track_error_ratio Numeric vector error ratios (cor vs. reg) per iteration.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize simulated data to match target correlations and fixed-effects regression estimates — optim_lm","text":"","code":"if (FALSE) { # \\dontrun{ # Optimize given sim_data from the Descriptives module matching means and SDs. res <- optim_lm(   sim_data = sim_data,   target_cor = c(.23),   target_reg = c(2.1, 1.2, -0.8),   reg_equation = \"Y ~ X1 + X2\",   max_iter = 10000,   hill_climbs = 50 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lme.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize simulated longitudinal mixed-effects data to match target correlations and regression estimates — optim_lme","title":"Optimize simulated longitudinal mixed-effects data to match target correlations and regression estimates — optim_lme","text":"Uses DISCOURSE algorithmic framework simulate data resulting correlations regression coefficients including random-intercept SD match specified targets given mixed-effects regression model input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize simulated longitudinal mixed-effects data to match target correlations and regression estimates — optim_lme","text":"","code":"optim_lme(   sim_data,   target_cor,   target_reg,   reg_equation,   target_se = NULL,   weight = c(1, 1),   max_iter = 1e+05,   init_temp = 1,   cooling_rate = NULL,   tolerance = 1e-06,   progress_bar = TRUE,   max_starts = 1,   hill_climbs = 100,   move_prob = list(start = c(residual = 0, k_cycle = 0, local = 0.25, tau = 0.75), end =     c(residual = 0.2, k_cycle = 0.1, local = 0.7, tau = 0)),   min_decimals = 1,   eps = 1e-05,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize simulated longitudinal mixed-effects data to match target correlations and regression estimates — optim_lme","text":"sim_data Data.frame. Wide-format predictors outcome columns longitudinal data. target_cor Numeric vector. Target upper-triangular (excluding diagonal) correlation values predictor outcome variables. target_reg Numeric vector. Target fixed-effect coefficients (including intercept random-intercept SD). reg_equation Character formula. Mixed-effects model formula (e.g., \"Y ~ X1 + X2 + (1|ID)\"). target_se Numeric vector, optional. Target standard errors fixed-effect estimates; length matches `target_reg` minus 1 (random-intercept SD). weight Numeric vector length 2. Weights correlation vs. regression error objective function. Default `c(1, 1)`. max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. progress_bar Logical. Show text progress bar optimization. Default `TRUE`. max_starts Integer. Number annealing restarts. Default `1`. hill_climbs Integer NULL. Number hill‐climbing iterations optional local refinement; NULL, skips refinement. Default `NULL`. move_prob List. Start/end move probabilities operations: residual swap, k-cycle, local swap, tau reordering. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. eps Numeric. Small constant stabilize scaling (prevent division zero). Default `1e-5`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`. @return `discourse.object` list containing: best_error Numeric. Minimum objective error achieved. data Data.frame. Optimized wide-format longitudinal data. inputs List input parameters reproducibility. track_error Numeric vector best error iteration annealing. track_error_ratio Numeric vector error ratios (cor vs. reg) per iteration. track_move_best Character vector. Move types produced best improvements. track_move_acc Character vector. Move types accepted per iteration.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_lme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize simulated longitudinal mixed-effects data to match target correlations and regression estimates — optim_lme","text":"","code":"if (FALSE) { # \\dontrun{ # Optimize data optim_lme(   sim_data       = sim_data,   target_cor     = c(0.4),   target_reg     = c(1, 0.5, 4),   reg_equation   = \"Y ~ X1 + (1|ID)\",   max_iter       = 2000,   hill_climbs    = 50 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize a vector or matrix to match target means and SDs — optim_vec","title":"Optimize a vector or matrix to match target means and SDs — optim_vec","text":"Uses DISCOURSE algorithmic framework simulate one multiple vectors matches specified target means standard deviations given input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize a vector or matrix to match target means and SDs — optim_vec","text":"","code":"optim_vec(   N,   target_mean,   target_sd,   range,   tolerance,   integer,   max_iter = 1e+05,   init_temp = 1,   cooling_rate = NULL,   int.probs = NULL,   progress_bar = TRUE,   obj_weight = list(c(1, 1)),   maxit_pso = 2000,   eps = 1e-12,   max_starts = 3,   checkGrim = TRUE,   prob_heuristic = 0.1,   parallel = FALSE,   min_decimals = 1,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize a vector or matrix to match target means and SDs — optim_vec","text":"N Integer. Number values vector. target_mean Named numeric vector. Desired means variable (names identify columns). target_sd Named numeric vector. Desired standard deviations variable. range Numeric vector length 2 numeric matrix. Allowed value range variables (vector), per-variable bounds two-row matrix matching `target_mean`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-12`. integer Logical logical vector. TRUE, optimize integer values; length 1 length `target_mean`. max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. int.probs List numeric vectors, one per variable. Sampling probabilities integer moves; NULL uniform. progress_bar Logical. Show text progress bar optimization. Default `TRUE`. obj_weight List numeric vectors length 2, one per variable. Weights mean vs. SD error. Default `list(c(1,1))`. maxit_pso Integer. Maximum PSO iterations continuous variables. Default `2000`. eps Numeric. Small constant avoid division zero objective. Default `1e-12`. max_starts Integer. Number annealing restarts. Default `3`. checkGrim Logical. TRUE `integer = TRUE`, perform GRIM checks `target_group_means`. Default FALSE. prob_heuristic Numeric. Probability heuristic move vs. random swap integer mode. Default `0.1`. parallel Logical. TRUE, optimize variable parallel. Default `FALSE`. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize a vector or matrix to match target means and SDs — optim_vec","text":"`discourse.object` list containing: best_error Numeric. Minimum objective error achieved. data Data.frame matrix optimized vectors (columns named `target_mean`). track_error Numeric vector best error iteration annealing. inputs List input parameters reproducibility. grim List GRIM results.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/optim_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize a vector or matrix to match target means and SDs — optim_vec","text":"","code":"if (FALSE) { # \\dontrun{ # Optimize a vector of length 100 res <- optim_vec(   N            = 100,   target_mean  = 10,   target_sd    = 2,   range        = c(0, 20),   integer      = TRUE,   max_iter     = 50000,   max_starts   = 2 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_aov.html","id":null,"dir":"Reference","previous_headings":"","what":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","title":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","text":"Uses DISCOURSE algorithmic framework simulate multiple data sets produce target ANOVA F-statistics specified factorial design given input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_aov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","text":"","code":"parallel_aov(   parallel_start = 3,   return_best_solution = FALSE,   N,   levels,   target_group_means,   target_f_list,   integer,   range,   formula,   factor_type,   subgroup_sizes = NULL,   df_effects = NULL,   tolerance = 1e-08,   typeSS = 3,   max_iter = 1000,   init_temp = 1,   cooling_rate = NULL,   max_step = 0.2,   max_starts = 1,   checkGrim = FALSE,   min_decimals = 1,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_aov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","text":"parallel_start Number independent runs (parallel sequential) simulate data sets. return_best_solution Logical; return best run TRUE. N Integer. Total number subjects (sum `subgroup_sizes`). levels Integer vector. Number factor levels per factor design. target_group_means Numeric vector. Desired means group design. target_f_list List components: F Numeric vector target F-statistics. effect Character vector effect names matching `F`. contrast Optional character formula contrasts. contrast_method Optional character specifying contrast method. integer Logical. TRUE, candidate values treated integers, FALSE treated continous values. range Numeric vector length 2. Lower upper bounds candidate means. formula Formula character. Model formula used compute F-values (e.g., `y ~ + B + *B`). factor_type Character vector. Type factor (`\"\"` `\"within\"`) matching length `levels`. subgroup_sizes Numeric vector. Optional sizes -subjects group unbalanced designs; length must equal product `levels` factors. df_effects Numeric vector. Degrees freedom model effects. Default `NULL`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. typeSS Integer. Type sums--squares ANOVA (2 3). Default 3. max_iter Integer. Maximum iterations per restart. Default 1e3. init_temp Numeric. Initial temperature annealing. Default 1. cooling_rate Numeric. Cooling rate per iteration (0 1); NULL, calculated automatically `(init_temp-10)/init_temp`. max_step Numeric. Maximum move size proportion `range`. Default 0.2. max_starts Integer. Number annealing restarts. Default 1. checkGrim Logical. TRUE `integer = TRUE`, perform GRIM checks `target_group_means`. Default FALSE. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_aov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","text":"list multiple `discourse.object`s, containing: best_error Numeric. Minimum error (RMSE) achieved. data Data frame optimized outcome values (grouping variables). inputs List input arguments. track_error Numeric vector best error iteration. grim List GRIM results.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_aov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"#' Optimize multiple data sets to match ANOVA F-values — parallel_aov","text":"","code":"if (FALSE) { # \\dontrun{ # Balanced 2x2 design parallel_aov(   parallel_start = 7,   return_best_solution = FALSE,   N = 40,   levels = c(2, 2),   target_group_means = c(1, 2, 3, 4),   target_f_list = list(effect = c(\"A\", \"B\"),                        F = c(5.6, 8.3), ),   formula = y ~ A + B + A*B,   factor_type = c(\"between\", \"between\"),   range = c(0, 5),   integer = FALSE,   max_iter = 1000,   max_starts = 3 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lm.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","title":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","text":"Uses DISCOURSE algorithmic framework simulate multiple data sets resulting correlations regression coefficients match specified targets given regression model input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","text":"","code":"parallel_lm(   parallel_start,   return_best_solution,   sim_data,   target_cor,   target_reg,   reg_equation,   target_se = NULL,   weight = c(1, 1),   max_iter = 1e+05,   init_temp = 1,   cooling_rate = NULL,   tolerance = 1e-06,   prob_global_move = 0.1,   max_starts = 1,   hill_climbs = NULL,   min_decimals = 1,   progress_mode = c(\"console\") )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","text":"parallel_start Number independent runs (parallel sequential) simulate data sets. return_best_solution Logical; return best run TRUE. sim_data Data frame. Predictor variables outcome optimized; least two columns. target_cor Numeric vector. Target upper-triangular (excluding diagonal) correlation values predictor outcome variables. target_reg Numeric vector. Target regression coefficients including intercept, matching terms `reg_equation`. reg_equation Character formula. Regression model (e.g., \"Y ~ X1 + X2 + X1:X2\"). target_se Numeric vector, optional. Target standard errors regression coefficients (length `target_reg`). weight Numeric vector length 2. Weights correlation vs. regression error objective function. Default `c(1, 1)`. max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. prob_global_move Numeric (0–1). Probability global shuffle move vs. local swap. Default `0.1`. max_starts Integer. Number annealing restarts. Default `1`. hill_climbs Integer NULL. Number hill‐climbing iterations optional local refinement; NULL, skips refinement. Default `NULL`. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","text":"list multiple `discourse.object`s, containing: best_error Numeric. Minimum objective error achieved. data Data frame optimized predictor outcome values. inputs List input parameters reproducibility. track_error Numeric vector best error iteration annealing. track_error_ratio Numeric vector error ratios (cor vs. reg) per iteration.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize multiple simulated data sets to match target correlations and fixed-effects regression fits — parallel_lm","text":"","code":"if (FALSE) { # \\dontrun{ # Optimize given sim_data from the Descriptives module matching means and SDs. res <- parallel_lm(   parallel_start = 7,   return_best_solution = FALSE,   sim_data = sim_data,   target_cor = c(.23),   target_reg = c(2.1, 1.2, -0.8),   reg_equation = \"Y ~ X1 + X2\",   max_iter = 10000,   hill_climbs = 50 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lme.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","title":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","text":"Uses DISCOURSE algorithmic framework simulate multiple data sets resulting correlations regression coefficients including random-intercept SD match specified targets given mixed-effects regression model input parameters.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","text":"","code":"parallel_lme(   parallel_start,   return_best_solution,   sim_data,   target_cor,   target_reg,   reg_equation,   target_se = NULL,   weight = NA,   max_iter = 10000,   init_temp = 1,   cooling_rate = NULL,   tolerance = 1e-06,   max_starts = 1,   hill_climbs = NULL,   move_prob = list(start = c(residual = 0, k_cycle = 0, local = 0.25, tau = 0.75), end =     c(residual = 0.2, k_cycle = 0.1, local = 0.7, tau = 0)),   min_decimals = 1,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","text":"parallel_start Number independent runs (parallel sequential) simulate data sets. return_best_solution Logical; return best run TRUE. sim_data Data.frame. Wide-format predictors outcome columns longitudinal data. target_cor Numeric vector. Target upper-triangular (excluding diagonal) correlation values predictor outcome variables. target_reg Numeric vector. Target fixed-effect coefficients (including intercept random-intercept SD). reg_equation Character formula. Mixed-effects model formula (e.g., \"Y ~ X1 + X2 + (1|ID)\"). target_se Numeric vector, optional. Target standard errors fixed-effect estimates; length matches `target_reg` minus 1 (random-intercept SD). weight Numeric vector length 2. Weights correlation vs. regression error objective function. Default `c(1, 1)`. max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. max_starts Integer. Number annealing restarts. Default `1`. hill_climbs Integer NULL. Number hill‐climbing iterations optional local refinement; NULL, skips refinement. Default `NULL`. move_prob List. Start/end move probabilities operations: residual swap, k-cycle, local swap, tau reordering. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","text":"list multiple `discourse.object`s, containing: best_error Numeric. Minimum objective error achieved. data Data.frame. Optimized wide-format longitudinal data. inputs List input parameters reproducibility. track_error Numeric vector best error iteration annealing. track_error_ratio Numeric vector error ratios (cor vs. reg) per iteration. track_move_best Character vector. Move types produced best improvements. track_move_acc Character vector. Move types accepted per iteration.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/parallel_lme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optimize multiple simulated longitudinal mixed-effects data to match target correlations and regression estimates — parallel_lme","text":"","code":"if (FALSE) { # \\dontrun{ # Optimize data parallel_lme(   parallel_start = 7,   return_best_solution = FALSE,   sim_data       = sim_data,   target_cor     = c(0.4),   target_reg     = c(1, 0.5, 4),   reg_equation   = \"Y ~ X1 + (1|ID)\",   max_iter       = 2000,   hill_climbs    = 50 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_cooling.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cooling schedule of a discourse.object — plot_cooling","title":"Plot cooling schedule of a discourse.object — plot_cooling","text":"Visualizes squared annealing temperature across iterations given `discourse.object`, allowing inspection cooling schedule used optimization.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_cooling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cooling schedule of a discourse.object — plot_cooling","text":"","code":"plot_cooling(discourse_obj)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_cooling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cooling schedule of a discourse.object — plot_cooling","text":"discourse_obj `discourse.object` returned one `optim_*` functions, containing `inputs$max_iter`, `inputs$init_temp`, `inputs$cooling_rate`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_cooling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot cooling schedule of a discourse.object — plot_cooling","text":"`ggplot2` object.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_cooling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot cooling schedule of a discourse.object — plot_cooling","text":"","code":"if (FALSE) { # \\dontrun{ result <- optim_aov(args = ..., ...) plot_cooling(result) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Error Ratio Evolution for a discourse.object — plot_error","title":"Plot Error Ratio Evolution for a discourse.object — plot_error","text":"Creates plot error versus iteration, assess trajectory objective function value `discourse.object`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Error Ratio Evolution for a discourse.object — plot_error","text":"","code":"plot_error(discourse_obj, run = 1, show_best = TRUE, first_iter = 1)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Error Ratio Evolution for a discourse.object — plot_error","text":"discourse_obj `discourse.object` S3 object produced `optim_*` functions, containing `track_error` element (numeric vector list vectors). run Integer. Index run plot `track_error` list; default `1`. show_best Logical. `TRUE`, adds point marking minimum error; default `TRUE`. first_iter Integer. Number initial iterations skip plotting (zero-based); default `1` (plots iteration 2 onward).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Error Ratio Evolution for a discourse.object — plot_error","text":"`ggplot2` object.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Error Ratio Evolution for a discourse.object — plot_error","text":"","code":"if (FALSE) { # \\dontrun{ result <- optim_lme(args = ..., ...) plot_error(result, first_iter = 500) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","title":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","text":"Displays ratio correlation regression error evolves across iterations `discourse.object`, enabling assessment balance objectives.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","text":"","code":"plot_error_ratio(   discourse_obj,   run = 1,   show_mean = TRUE,   show_median = TRUE,   show_final = TRUE )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","text":"discourse_obj `discourse.object` S3 object produced `optim_*` functions, containing `track_error` element (numeric vector list vectors). run Integer. Index run plot `track_error` list; default `1`. show_mean Logical. `TRUE`, draws horizontal line mean error ratio; default `TRUE`. show_median Logical. `TRUE`, draws horizontal line median error ratio; default `TRUE`. show_final Logical. `TRUE`, draws horizontal line final iteration's error ratio; default `TRUE`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","text":"`ggplot2` object.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_error_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Error Ratio Evolution for a discourse.object — plot_error_ratio","text":"","code":"if (FALSE) { # \\dontrun{ result <- optim_lm(args = ..., ...) plot_error(result, run = 1) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_rmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot RMSE Comparison for discourse.object runs — plot_rmse","title":"Plot RMSE Comparison for discourse.object runs — plot_rmse","text":"Visualizes root-mean-square error (RMSE) distributions -run variability versus deviations target values across multiple `discourse.object` runs (e.g. parallel_aov()).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_rmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot RMSE Comparison for discourse.object runs — plot_rmse","text":"","code":"plot_rmse(object_list)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_rmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot RMSE Comparison for discourse.object runs — plot_rmse","text":"object_list `discourse.object` list thereof, typically output `optim_*` functions.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_rmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot RMSE Comparison for discourse.object runs — plot_rmse","text":"`ggplot2` object.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_rmse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot RMSE Comparison for discourse.object runs — plot_rmse","text":"","code":"if (FALSE) { # \\dontrun{ results <- parallel_aov(args = ..., ...) plot_rmse(results) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","title":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","text":"Visualizes discrepancies simulated target summary statistics (e.g., means, SDs, F-values, correlations, regression coefficients) single `discourse.object`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","text":"","code":"plot_summary(discourse_obj, standardised = TRUE, eps = 1e-12)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","text":"discourse_obj `discourse.object` produced `optim_*` functions, containing simulated data/results `inputs$target_*` values. standardised Logical; `TRUE`, differences divided target values (except targets near zero); default `TRUE`. eps Numeric; threshold target treated zero standardisation; default `1e-12`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","text":"`ggplot2` object.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/plot_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Summary of Simulated vs. Target Statistics for a discourse.object — plot_summary","text":"","code":"if (FALSE) { # \\dontrun{ res <- optim_aov(...) plot_summary(res, standardised = FALSE) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/print.summary.discourse.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary for summary.discourse.object — print.summary.discourse.object","title":"Print summary for summary.discourse.object — print.summary.discourse.object","text":"minimal S3 print method objects class `summary.discourse.object`, providing optimization diagnostics summary statistics console.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/print.summary.discourse.object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary for summary.discourse.object — print.summary.discourse.object","text":"","code":"# S3 method for class 'summary.discourse.object' print(x, ...)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/print.summary.discourse.object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary for summary.discourse.object — print.summary.discourse.object","text":"x `summary.discourse.object` produced `summary.discourse.object`. ... Unused. Additional arguments ignored.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/print.summary.discourse.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print summary for summary.discourse.object — print.summary.discourse.object","text":"Invisibly returns input object `x` printing summary.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See `?golem::get_golem_options` details.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/summary.discourse.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize a discourse.object — summary.discourse.object","title":"Summarize a discourse.object — summary.discourse.object","text":"Provides comprehensive summary `discourse.object`, including RMSE, model components, statistics depending analysis type (LM/LME, ANOVA, vec).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/summary.discourse.object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize a discourse.object — summary.discourse.object","text":"","code":"# S3 method for class 'discourse.object' summary(object, ...)"},{"path":"https://sebastian-lortz.github.io/discourse/reference/summary.discourse.object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize a discourse.object — summary.discourse.object","text":"object `discourse.object` produced `optim_*` functions. ... Additional arguments (unused).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/summary.discourse.object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize a discourse.object — summary.discourse.object","text":"object class `summary.discourse.object` containing: rmse Named list RMSE values. inputs Original input list. data Optimized data frame. best_error Numeric. Minimum objective error achieved. track_error Numeric vector best error iteration. track_error_ratio Numeric vector error ratios (cor vs. reg) per iteration (available). model Fitted regression model ANOVA table (applicable). coefficients regression estimates (LM/LME ). std_errors Coefficient standard errors (LM/LME ). correlations Correlation values (LM/LME ). F_value ANOVA F statistics (ANOVA ). means Group variable means. sds Group variable standard deviations (vector ).","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/summary.discourse.object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize a discourse.object — summary.discourse.object","text":"","code":"if (FALSE) { # \\dontrun{ res_lm <- optim_lm(args = ..., ...) summary(res_lm) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate objective function weights via pilot simulations — weights_est","title":"Estimate objective function weights via pilot simulations — weights_est","text":"Runs single multiple optimizations (.e. optim_lm, optim_lme) calibrate balance correlation regression components objective function, yielding suggested weights.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate objective function weights via pilot simulations — weights_est","text":"","code":"weights_est(   module,   sim_runs,   sim_data,   target_cor,   target_reg,   target_se = NULL,   reg_equation,   max_iter = 1e+05,   init_temp = 1,   cooling_rate = NULL,   tolerance = 1e-06,   prob_global_move = 0.05,   progress_bar = TRUE,   weight = c(1, 1),   pool_range = 10,   max_starts = 1,   parallel_start = 1,   move_prob = list(start = c(residual = 0, k_cycle = 0, local = 0.25, tau = 0.75), end =     c(residual = 0.2, k_cycle = 0.1, local = 0.7, tau = 0)),   min_decimals = 0,   progress_mode = \"console\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate objective function weights via pilot simulations — weights_est","text":"module Character; either `\"lm\"` `\"lme\"` select module type. sim_runs Integer; number simulation runs. sim_data Data frame. Predictor variables outcome optimized; least two columns. target_cor Numeric vector. Target upper-triangular (excluding diagonal) correlation values predictor outcome variables. target_reg Numeric vector. Target regression coefficients including intercept, matching terms `reg_equation`. target_se Numeric vector, optional. Target standard errors regression coefficients (length `target_reg`). reg_equation Character formula. Regression model (e.g., \"Y ~ X1 + X2 + X1:X2\"). max_iter Integer. Maximum iterations simulated annealing per start. Default `1e5`. init_temp Numeric. Initial temperature annealing. Default `1`. cooling_rate Numeric NULL. Cooling rate per iteration (0–1); NULL, computed `(max_iter - 10) / max_iter`. tolerance Numeric. Error tolerance convergence; stops early best error < `tolerance`. Default `1e-6`. prob_global_move Numeric (0–1). Probability global shuffle move vs. local swap. Default `0.1`. progress_bar Logical. Show text progress bar optimization. Default `TRUE`. weight Numeric vector length 2. Weights correlation vs. regression error objective function. Default `c(1, 1)`. pool_range Integer; range best error values pool estimating weights. Default `10`. max_starts Integer. Number annealing restarts. Default `1`. parallel_start Number independent runs (parallel sequential) simulate weights. move_prob List. Start/end move probabilities operations: residual swap, k-cycle, local swap, tau reordering. min_decimals Integer. Minimum number decimal places target values (including trailing zeros). Default `1`. progress_mode Character. Either \"console\" \"shiny\" progress handler. Default `console`.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate objective function weights via pilot simulations — weights_est","text":"list components: weights Numeric vector estimated weights (correlation/regression). data optimized data set final run. track_error Numeric vector best error iteration annealing. error_ratio Numeric vector pilot-run error ratios used weight estimation.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate objective function weights via pilot simulations — weights_est","text":"","code":"if (FALSE) { # \\dontrun{ # estimate weights of objective function parallel_lm( sim_runs = 1,   parallel_start = 7,   return_best_solution = FALSE,   sim_data = sim_data,   target_cor = c(.23),   target_reg = c(2.1, 1.2, -0.8),   reg_equation = \"Y ~ X1 + X2\",   max_iter = 10000,   hill_climbs = 50 ) } # }"},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate weighting factors for mean and SD errors — weights_vec","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"Compute weighting factors match target mean SD across variables.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"","code":"weights_vec(   N,   target_mean,   target_sd,   range,   obj_weight = c(1, 1),   integer,   int.probs = NULL,   est_iter = 1000,   eps = 0.001,   max_weight = 10000,   metric = \"mean\" )"},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"N Integer. Number values vector. target_mean Named numeric vector. Desired means variable (names identify columns). target_sd Named numeric vector. Desired standard deviations variable. range Numeric vector length 2 numeric matrix. Allowed value range variables (vector), per-variable bounds two-row matrix matching `target_mean`. obj_weight List numeric vectors length 2, one per variable. Weights mean vs. SD error. Default `c(1,1)`. integer Logical vector: TRUE integer-valued vectors. int.probs List numeric vectors, one per variable. Sampling probabilities integer moves; NULL uniform. est_iter Number Monte Carlo iterations estimate weights. eps Numeric. Small constant avoid division zero objective. Default `1e-12`. max_weight Maximum allowed weight magnitude. metric Character: \"mean\" \"median\" summarizing estimated weights.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"list length equal `target_mean`, element numeric vector   length 2 containing estimated weights mean vs. SD error variable.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"Computes quasi-optimal weights balancing mean standard deviation errors multiple variables running Monte Carlo optimization estimate relative baseline contribution term objective function.","code":""},{"path":"https://sebastian-lortz.github.io/discourse/reference/weights_vec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate weighting factors for mean and SD errors — weights_vec","text":"","code":"if (FALSE) { # \\dontrun{ # Estimate weights weights_vec(   N = 100,   target_mean = c(5,10),   target_sd   = c(2,3),   integer     = c(TRUE,TRUE),   range       = matrix(c(0,15, 0,20), nrow = 2), ) } # }"},{"path":[]},{"path":"https://sebastian-lortz.github.io/discourse/news/index.html","id":"discourse-development-version-1","dir":"Changelog","previous_headings":"","what":"discourse 0.0.0.9000","title":"DISCOURSE (development version)","text":"Initial version …","code":""}]
